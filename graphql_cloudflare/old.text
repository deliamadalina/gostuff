package main

import (
	"context"
	"fmt"

	"github.com/machinebox/graphql"
)

type data struct {
	data_set    string
	zone_tag    string
	limit       int
	datetime_gt string
	datetime_lt string
}

func main() {

	graphqlClient := graphql.NewClient("https://api.cloudflare.com/client/v4/graphql")
	graphqlRequest := graphql.NewRequest(`
	query {
		viewer {
		  zones(filter: {zoneTag: "1c6036dfef899d6cede6e66517159649"}) {
			httpRequests1mGroups(limit: 5, filter: { datetime_gt: "2020-07-31T04:00:00Z", datetime_lt: "2020-07-31T06:00:00Z"}) {
			  sum {
				countryMap {
				  bytes
				  clientCountryName
				}
			  }
			  dimensions {
				date
				datetime
			  }
			}
		  }
		}
	  }`)
	graphqlRequest.Header.Add("X-Auth-Key", readEnv().api_key)
	graphqlRequest.Header.Add("X-Auth-Email", readEnv().email)
	var graphqlResponse interface{}

	if err := graphqlClient.Run(context.Background(), graphqlRequest, &graphqlResponse); err != nil {
		panic(err)
	}
	fmt.Println(graphqlResponse)

}
